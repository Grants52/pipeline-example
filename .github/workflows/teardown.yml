name: Test-teardown
env: 
  S3_BUCKET_NAME      : "${{ github.sha }}"
  DEPLOY_PACKAGE_NAME : "packages/docs-site/public"
  AWS_REGION_NAME     : "eu-west-2"
  BRANCH              : "${{ github.event.ref }}"
#  BRANCH2             : "${BRANCH////-}"
#  RUN                 : "${{ github.run_number }}"
#  S3_BUCKET_NAME_D      : "docssite-"
  S3_BUCKET_NAME_D      : "docssite-${BRANCH////-}${{ github.run_number }}"
  S3_BUCKET_NAME_S      : "storybook-${BRANCH////-}${{ github.run_number }}"
    
     
    
on:
  delete:
#    branches: 
#      - master
jobs:        
     docs-site_teardown_pipeline:
      runs-on: ubuntu-latest
      
      steps:
        - name: Git clone repository
          uses: actions/checkout@v2  
          
        - name: Dump GitHub context
          env:
           GITHUB_CONTEXT: ${{ toJson(github) }}
          run: echo "$GITHUB_CONTEXT"
       
                   
        - name: Print branchname
          run:  echo "${{env.BRANCH}}"
          
#        - name: Print action   
#          run: echo "Im going to remove the resources related to "${{env.BRANCH2}}""
          
#        - name: Print Delete Bucket 
#          run: echo "Im going to remove the resources related to "${{env.S3_BUCKET_NAME_D}}${{env.BRANCH2}}${{env.RUN}}"" 
        
#        - name: Print run number 
#          run: echo "${{env.RUN}}"

        - name: Print New bucket names
          run: |
              echo "${{env.S3_BUCKET_NAME_D}}"
              echo "${{env.S3_BUCKET_NAME_S}}"
    
        - name: Apply bucket policies
          run: |
              cat <<EOF >policy.json
              {
                "Version": "2012-10-17",
                  "Statement": [
                      {
                          "Sid": "PublicReadGetObject",
                          "Effect": "Allow",
                          "Principal": "*",
                          "Action": "s3:GetObject",
                          "Resource": "arn:aws:s3:::${{env.S3_BUCKET_NAME_D}}/*"
                      }
                  ]
              }
              EOF
              echo "aws s3api put-bucket-policy --bucket ${{env.S3_BUCKET_NAME_D}} --policy file://policy.json"
              
              
        - name: Apply bucket policies
          run: cat policy.json
